user www-data;
worker_processes 4;
pid /run/nginx.pid;
daemon off;
events {
	worker_connections 768;
	# multi_accept on;
}

http {
# include mime.types;
#    default_type application/octet-stream;
	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /usr/local/nginx/conf/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /var/log/nginx_access.log;
	error_log /var/log/nginx_error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# nginx-naxsi config
	##
	# Uncomment it if you installed nginx-naxsi
	##

	#include /etc/nginx/naxsi_core.rules;

	##
	# nginx-passenger config
	##
	# Uncomment it if you installed nginx-passenger
	##
	
	#passenger_root /usr;
	#passenger_ruby /usr/bin/ruby;

	##
	# Virtual Host Configs
	##


	include /usr/local/nginx/conf/default;



}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}

rtmp_auto_push on;

rtmp {

    server {

        listen 0.0.0.0:1935;
drop_idle_publisher 10s;
#        chunk_size 4000;
#  notify_method get;
        # TV mode: one publisher, many subscribers
wait_key on;
wait_video on;


        application livemp3 {

   live on;
   on_publish http://localhost/onpublish_auth; 
# exec_push bash -c "echo $name > /tmp/rtmpecho"
  exec_push ffmpeg -re -i rtmp://localhost/livemp3/$name -vcodec copy -acodec aac -strict -2 -f flv rtmp://localhost/live/$name?psk=XXXPASSXXX;
allow play all;

notify_method get;
wait_key on;
wait_video on;


        }

        application recmp3 {

   live on;
   on_publish http://localhost/onpublish_auth; 
# exec_push bash -c "echo $name > /tmp/rtmpecho"
  exec_push ffmpeg -re -i rtmp://localhost/recmp3/$name -vcodec copy -acodec aac -strict -2 -f flv rtmp://localhost/rec/$name?psk=XXXPASSXXX;
allow play all;

notify_method get;
wait_key on;
wait_video on;


        }

        application live {
            live on;
on_publish http://localhost/onpublish_auth; 
#meta copy;
allow play all;

notify_method get;
wait_key on;
wait_video on;
# drop_idle_pubblisher 5s;

 


 # sample HLS
            hls on;
            hls_path /tmp/hls;
#            hls_sync 100ms;
hls_fragment 5s;
hls_base_url /hls/;

        }

		        application rec {
            live on;
on_publish http://localhost/onpublish_auth; 
#meta copy;
allow play all;

notify_method get;
wait_key on;
wait_video on;
# drop_idle_pubblisher 5s;
# RECORDING
            recorder rec1 {
                record all;
            #    record_interval 30s;
                record_path /data;
                record_unique on;

exec_record_done bash -c "mv $path $path.end.flv && avconv -i $path.end.flv -c copy $path.ok.flv && rm $path.end.flv";
}

 


 # sample HLS
            hls on;
            hls_path /tmp/hls;
#            hls_sync 100ms;
hls_fragment 5s;
hls_base_url /hls/;

        }
    }
}